version: 0.2

#cache:
#  paths:
#    - '/root/.gradle/caches/**/*'
#    - '/root/.gradle/wrapper/**/*'

env:
  variables:
    CI: true
    LOCAL_ENV_RUN: true
    AWS_STS_REGIONAL_ENDPOINTS: regional

    DISPLAY: :99
    SCREEN_WIDTH: 1920
    SCREEN_HEIGHT: 1080
    SCREEN_DEPTH: 24

phases:
  install:
    runtime-versions:
      java: corretto11
      dotnet: 3.1

    commands:
      - apt-get update
      - apt-get install -y xvfb xfce4 procps ffmpeg xterm xinput

      - mkdir -p /tmp/.aws
      - aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name ui-test > /tmp/.aws/creds.json
      - export KEY_ID=`jq -r '.Credentials.AccessKeyId' /tmp/.aws/creds.json`
      - export SECRET=`jq -r '.Credentials.SecretAccessKey' /tmp/.aws/creds.json`
      - export TOKEN=`jq -r '.Credentials.SessionToken' /tmp/.aws/creds.json`
      - |
        >/tmp/.aws/credentials echo "[default]
        aws_access_key_id=$KEY_ID
        aws_secret_access_key=$SECRET
        aws_session_token=$TOKEN"

      - pip3 install --user --upgrade  aws-sam-cli

      # login to DockerHub so we don't get throttled
      - export DOCKER_USERNAME=`echo $DOCKER_HUB_TOKEN | jq -r '.username'`
      - export DOCKER_PASSWORD=`echo $DOCKER_HUB_TOKEN | jq -r '.password'`
      - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD || true

  build:
    commands:
      - export SAM_CLI_EXEC=`which sam`
      - echo "SAM CLI location $SAM_CLI_EXEC"
      - $SAM_CLI_EXEC --version

      - chmod +x gradlew
      - ./gradlew buildPlugin --console plain --info

      - Xvfb ${DISPLAY} -screen 0 ${SCREEN_WIDTH}x${SCREEN_HEIGHT}x${SCREEN_DEPTH} &
      - while [ ! -e /tmp/.X11-unix/X99 ]; do sleep 0.1; done
      - XFCE_PANEL_MIGRATE_DEFAULT=1 xfce4-session --display=${DISPLAY} &
      - xinput list
      - xterm -e "xinput list | grep -Po 'id=\K\d+(?=.*slave\s*pointer)' | xargs -P0 -n1 xinput test" &
      - ffmpeg -loglevel quiet -f x11grab -video_size ${SCREEN_WIDTH}x${SCREEN_HEIGHT} -i ${DISPLAY} -codec:v libx264 -pix_fmt yuv420p -framerate 12 -g 12 /tmp/screen_recording.mp4 &

      - env AWS_ACCESS_KEY_ID=$KEY_ID AWS_SECRET_ACCESS_KEY=$SECRET AWS_SESSION_TOKEN=$TOKEN ./gradlew uiTestCore coverageReport --console plain --info

  post_build:
    commands:
      - TEST_ARTIFACTS="/tmp/testArtifacts"
      - mkdir -p $TEST_ARTIFACTS/test-reports

      - pkill -2 ffmpeg; while pgrep ffmpeg > /dev/null; do sleep 1; done;

      - rsync -rmq --include='*/' --include '**/build/idea-sandbox/system*/log/**' --exclude='*' . $TEST_ARTIFACTS/ || true
      - rsync -rmq --include='*/' --include '**/build/reports/**' --exclude='*' . $TEST_ARTIFACTS/ || true
      - rsync -rmq --include='*/' --include '**/test-results/**/*.xml' --exclude='*' . $TEST_ARTIFACTS/test-reports || true

      - cp /tmp/screen_recording.mp4 $TEST_ARTIFACTS/

      - VCS_COMMIT_ID="${CODEBUILD_RESOLVED_SOURCE_VERSION}"
      - CI_BUILD_URL=$(echo $CODEBUILD_BUILD_URL | sed 's/#/%23/g') # Encode `#` in the URL because otherwise the url is clipped in the Codecov.io site
      - CI_BUILD_ID="${CODEBUILD_BUILD_ID}"
      - test -n "$CODE_COV_TOKEN" && curl -s https://codecov.io/bash > codecov.sh || true # this sometimes times out but we don't want to fail the build
      - test -n "$CODE_COV_TOKEN" && test -n "$CODEBUILD_BUILD_SUCCEEDING" && bash ./codecov.sh -t $CODE_COV_TOKEN -F uitest || true

reports:
  ui-test:
    files:
      - "**/*"
    base-directory: /tmp/testArtifacts/test-reports
    discard-paths: yes

artifacts:
  base-directory: /tmp/testArtifacts
  files:
    - "**/*"
