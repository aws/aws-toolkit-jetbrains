// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'jacoco'

dependencies {
    compile project(":")
    compile project(path: ":core", configuration: 'testArtifacts')
}

intellij {
    version ideVersion("IC")
    updateSinceUntilBuild false
    downloadSources false
    instrumentCode false
    plugins = idePlugins("IC") + [guiTestFramework(), project(":")]
}

jacoco.applyTo(runIde)
runIde {
    systemProperties System.properties.findAll {(it.key as String).startsWith("idea") || (it.key as String).startsWith("jb")}
    debugOptions {
        enabled = false
        port = 5005
        server = true
        suspend = true
    }

    /* Need to split the space-delimited value in the exec.args */
    args System.getProperty("exec.args", "").split(",")
    jacoco {
        includeNoLocationClasses = true
        includes = ["software.aws.toolkits.*"]
    }
}

// don't run gui tests as part of check
test.enabled = false

task guiTest(type: Test) {
    workingDir = project.rootDir
    systemProperty("idea.gui.tests.gradle.runner", true)
    include '**/*TestSuite*'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task classesJar(type: Jar, dependsOn: classes) {
    classifier = 'classes'
    from sourceSets.main.output
    from project(':jetbrains-core').sourceSets.main.output
    from project(':jetbrains-ultimate').sourceSets.main.output

    project.findProject(':jetbrains-rider')?.collect {
        from it.sourceSets.main.output
    }

    from project(':core').sourceSets.test.output
    exclude 'META-INF/plugin.xml'
    exclude 'testData/*'
}

task testsJar(type: Jar, dependsOn: classes) {
    classifier = 'tests'
    from sourceSets.test.output
    exclude 'testData/*'
}

prepareSandbox {
    from(classesJar) {
        into "testGuiFramework/lib"
    }
    from(sourceSets.main.resources) {
        exclude 'META-INF'
        into "testGuiFramework/lib"
    }
    from(sourceSets.test.resources) {
        exclude 'META-INF'
        into "testGuiFramework/lib"
    }
    from(testsJar) {
        into "testGuiFramework/lib"
    }
}
