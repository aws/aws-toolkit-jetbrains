<!-- Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. -->
<!-- SPDX-License-Identifier: Apache-2.0 -->

<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>aws.toolkit</id>
    <name>AWS Toolkit</name>
    <version>1.0</version>

    <description><![CDATA[
<p>
    The AWS Toolkit is an open-source plug-in for JetBrains IDEs that makes it easier to develop applications built on
    AWS. The toolkit helps you create, test, and debug serverless applications built using the AWS Serverless
    Application Model (<a href="https://aws.amazon.com/serverless/sam/">SAM</a>).</p>
<br/>
<p>
    See <a href="https://docs.aws.amazon.com/console/toolkit-for-jetbrains/install">Installing the AWS Toolkit for
    JetBrains</a>in the AWS Toolkit for JetBrains User Guide.
</p>
<br/>
<p>To use this AWS Toolkit, you will first need an AWS account, a user within that account, and an access key for that
    user.
</p>
<br/>
<p>To use the AWS Toolkit to do AWS serverless application development and to run/debug AWS Lambda functions locally,
    you will also need to install the AWS CLI, Docker, and the AWS SAM CLI. The preceding link covers setting up all of
    these prerequisites.
</p>
<br/>
<p>
    If you come across bugs with the toolkit or have feature requests, please raise an <a
        href="https://github.com/aws/aws-toolkit-jetbrains/issues">issue</a>.
</p>

<p><h2><strong>Features</strong></h2></p>

<p><strong>SAM features are currently limited to Java and Python only</strong></p>

<ul>
    <li>
        <strong>New Project Wizard</strong> - Get started quickly by using one of the quickstart serverless application
        templates <a href="https://docs.aws.amazon.com/console/toolkit-for-jetbrains/new-project">Learn More</a>
    </li>

    <li>
        <strong>Run/Debug Local Lambda Functions</strong> - Locally test and step-through debug functions in a
        Lambda-like execution environment provided by the AWS SAM CLI
        <a href="https://docs.aws.amazon.com/console/toolkit-for-jetbrains/lambda-local">Learn More</a>
    </li>

    <li>
        <strong>Resource Explorer</strong> - View your AWS Lambda remote functions & related CloudFormation stacks
        <a href="https://docs.aws.amazon.com/console/toolkit-for-jetbrains/aws-explorer">Learn More</a>
    </li>

    <li>
        <strong>Invoke Remote Lambda Functions</strong> - Invoke remote functions using a sharable run-configuration
        <a href="https://docs.aws.amazon.com/console/toolkit-for-jetbrains/lambda-remote">Learn More</a>
    </li>

    <li>
        <strong>Deploy SAM-based Applications</strong> - Package, deploy & track SAM-based applications
        <a href="https://docs.aws.amazon.com/console/toolkit-for-jetbrains/sam-deploy">Learn More</a>
    </li>
</ul>
    ]]></description>

    <vendor email="aws-toolkit-jetbrains@amazon.com" url="https://aws.amazon.com/">Amazon Web Services</vendor>
    <idea-version since-build="183.2153.8" until-build="191.*"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- All dependencies have to be defined here, you can't define more in an optional config-file,
        See PluginManagerCore#mergeOptionalConfigs -->
    <depends>com.intellij.modules.lang</depends>
    <depends>org.jetbrains.plugins.yaml</depends>

    <depends optional="true">org.jetbrains.idea.maven</depends>
    <depends optional="true">com.intellij.modules.externalSystem</depends>>
    <depends optional="true" config-file="ext-java.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="ext-python.xml">com.intellij.modules.python</depends>

    <xi:include href="/META-INF/change-notes.xml" xpointer="xpointer(/idea-plugin/*)">
        <xi:fallback/>
    </xi:include>

    <application-components>
        <component>
            <interface-class>software.aws.toolkits.jetbrains.components.telemetry.TelemetryComponent</interface-class>
            <implementation-class>software.aws.toolkits.jetbrains.components.telemetry.DefaultTelemetryComponent</implementation-class>
        </component>
    </application-components>

    <extensionPoints>
        <extensionPoint qualifiedName="aws.toolkit.credentialProviderFactory"
                        beanClass="software.aws.toolkits.jetbrains.core.credentials.CredentialProviderFactoryEP">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.core.credentials.CredentialProviderFactory"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.runtimeGroup" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupInformation"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.builder" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.LambdaBuilder"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.sam.debugSupport" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.execution.local.SamDebugSupport"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.handlerResolver" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.LambdaHandlerResolver"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Credential Management -->
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.core.RemoteResourceResolverProvider"
                            serviceImplementation="software.aws.toolkits.jetbrains.core.DefaultRemoteResourceResolverProvider"/>
        <applicationService serviceInterface="software.aws.toolkits.core.region.ToolkitRegionProvider"
                            serviceImplementation="software.aws.toolkits.jetbrains.core.region.AwsRegionProvider"
                            testServiceImplementation="software.aws.toolkits.jetbrains.core.region.MockRegionProvider"/>
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.core.credentials.CredentialManager"
                            serviceImplementation="software.aws.toolkits.jetbrains.core.credentials.DefaultCredentialManager"
                            testServiceImplementation="software.aws.toolkits.jetbrains.core.credentials.MockCredentialsManager"/>
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.settings.AwsSettings"
                            serviceImplementation="software.aws.toolkits.jetbrains.settings.DefaultAwsSettings"/>
        <applicationService serviceImplementation="software.aws.toolkits.jetbrains.settings.SamSettings"/>
        <projectService serviceImplementation="software.aws.toolkits.jetbrains.settings.LambdaSettings"/>

        <moduleService serviceImplementation="software.aws.toolkits.jetbrains.settings.DeploySettings"/>

        <projectService serviceInterface="software.aws.toolkits.jetbrains.core.credentials.ProjectAccountSettingsManager"
                        serviceImplementation="software.aws.toolkits.jetbrains.core.credentials.DefaultProjectAccountSettingsManager"
                        testServiceImplementation="software.aws.toolkits.jetbrains.core.credentials.MockProjectAccountSettingsManager"/>
        <postStartupActivity implementation="software.aws.toolkits.jetbrains.core.AwsSettingsPanelInstaller"/>
        <postStartupActivity implementation="software.aws.toolkits.jetbrains.core.AwsTelemetryPrompter"/>

        <applicationService serviceImplementation="software.aws.toolkits.jetbrains.core.AwsSdkClient"/>
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.services.telemetry.MessageBusService"
                            serviceImplementation="software.aws.toolkits.jetbrains.services.telemetry.DefaultMessageBusService"
                            testServiceImplementation="software.aws.toolkits.jetbrains.services.telemetry.MockMessageBusService"/>
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.services.telemetry.TelemetryService"
                            serviceImplementation="software.aws.toolkits.jetbrains.services.telemetry.DefaultTelemetryService"
                            testServiceImplementation="software.aws.toolkits.jetbrains.services.telemetry.MockTelemetryService" />
        <projectService serviceInterface="software.aws.toolkits.core.ToolkitClientManager"
                        serviceImplementation="software.aws.toolkits.jetbrains.core.AwsClientManager"
                        testServiceImplementation="software.aws.toolkits.jetbrains.core.MockClientManager"/>
        <projectService serviceInterface="software.aws.toolkits.jetbrains.core.AwsResourceCache"
                        serviceImplementation="software.aws.toolkits.jetbrains.core.DefaultAwsResourceCache"
                        testServiceImplementation="software.aws.toolkits.jetbrains.core.MockResourceCache"/>
        <toolWindow id="aws.explorer" anchor="left" secondary="true"
                    factoryClass="software.aws.toolkits.jetbrains.core.explorer.AwsExplorerFactory"
                    icon="AwsIcons.Logos.AWS"/>

        <projectConfigurable id="aws" groupId="tools" bundle="software.aws.toolkits.resources.localized_messages"
                             key="aws.settings.title"
                             instance="software.aws.toolkits.jetbrains.settings.AwsSettingsConfigurable"/>

        <programRunner implementation="software.aws.toolkits.jetbrains.services.lambda.execution.local.SamInvokeRunner"/>
        <programRunner implementation="software.aws.toolkits.jetbrains.services.lambda.execution.remote.RemoteLambdaRunner"/>
        <fileBasedIndex implementation="software.aws.toolkits.jetbrains.services.lambda.LambdaHandlerIndex"/>
        <fileBasedIndex implementation="software.aws.toolkits.jetbrains.services.cloudformation.CloudFormationTemplateIndex"/>

        <codeInsight.lineMarkerProvider language="" implementationClass="software.aws.toolkits.jetbrains.services.lambda.upload.LambdaLineMarker"/>
        <runLineMarkerContributor language="yaml" implementationClass="software.aws.toolkits.jetbrains.services.lambda.execution.template.YamlLambdaRunLineMarkerContributor"/>
        <configurationType implementation="software.aws.toolkits.jetbrains.services.lambda.execution.LambdaRunConfiguration"/>
        <runConfigurationProducer implementation="software.aws.toolkits.jetbrains.services.lambda.execution.local.LocalLambdaRunConfigurationProducer"/>
        <runConfigurationProducer implementation="software.aws.toolkits.jetbrains.services.lambda.execution.remote.LambdaRemoteRunConfigurationProducer"/>

        <!-- Project Wizard components -->
        <moduleType id="AWS" implementationClass="software.aws.toolkits.jetbrains.ui.wizard.AwsModuleType" />
        <directoryProjectGenerator implementation="software.aws.toolkits.jetbrains.ui.wizard.SamProjectGenerator" />
        <projectTemplatesFactory implementation="software.aws.toolkits.jetbrains.ui.wizard.SamProjectGeneratorIntelliJAdapter" />

        <webHelpProvider implementation="software.aws.toolkits.jetbrains.core.help.HelpIdTranslator"/>
    </extensions>

    <extensions defaultExtensionNs="aws.toolkit">
        <credentialProviderFactory implementation="software.aws.toolkits.jetbrains.core.credentials.profiles.ProfileCredentialProviderFactory"/>
    </extensions>

    <actions>
        <group id="aws.toolkit.explorer.lambda" popup="true" compact="false">
            <action id="lambda.function.create" class="software.aws.toolkits.jetbrains.services.lambda.upload.CreateLambdaFunction"/>
        </group>

        <group id="aws.toolkit.explorer.lambda.function.immutable" popup="false" compact="false">
            <reference ref="RunContextGroupInner"/>
            <separator/>
            <action id="lambda.function.gotohandler"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.GoToHandlerAction"/>
        </group>

        <group id="aws.toolkit.explorer.lambda.function" popup="false" compact="false">
            <reference ref="aws.toolkit.explorer.lambda.function.immutable"/>
            <separator/>
            <action id="lambda.function.updateConfiguration"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.UpdateFunctionConfigurationAction"/>
            <action id="lambda.function.updateCode" class="software.aws.toolkits.jetbrains.services.lambda.actions.UpdateFunctionCodeAction"/>
            <separator/>
            <action id="lambda.function.delete"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.DeleteFunctionAction"/>
        </group>

        <group id="aws.toolkit.explorer.cloudformation.stack" popup="true" compact="false">
            <action id="cloudformation.stack.delete"
                    class="software.aws.toolkits.jetbrains.services.cloudformation.DeleteCloudFormationStackAction"/>
        </group>

        <action class="software.aws.toolkits.jetbrains.core.SettingsSelectorAction" id="aws.settings.selector" icon="AwsIcons.Logos.AWS"/>
        <action class="software.aws.toolkits.jetbrains.core.credentials.CreateOrUpdateCredentialProfilesAction" id="aws.settings.upsertCredentials" icon="AwsIcons.Logos.AWS"/>

        <group id="aws.toolkit.serverless.template">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="EditorTabPopupMenu" anchor="last"/>

            <separator/>
            <action id="serverless.application.deploy"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.DeployServerlessApplicationAction"/>
            <separator/>
        </group>
    </actions>

</idea-plugin>
