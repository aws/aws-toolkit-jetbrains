<!-- Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. -->
<!-- SPDX-License-Identifier: Apache-2.0 -->

<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>aws.toolkit</id>
    <name>AWS Toolkit</name>
    <version>1.0</version>

    <description><![CDATA[
<p>The AWS Toolkit is an open-source plug-in for JetBrains IDEs that makes it easier to develop applications built on AWS. The toolkit helps you create, test, and debug serverless applications built using the AWS Serverless Application Model (<a href="https://aws.amazon.com/serverless/sam/">SAM</a>).
</p>

<p><h2><strong>Features</strong></h2></p>

<ul>
    <li><strong>New Project Wizard</strong> - Get started quickly by using one of the quickstart serverless application templates</li>
    <li><strong>Run/Debug Local Lambda Functions</strong> - Locally test and step-through debug functions in a Lambda-like execution environment provided by the <a href="https://github.com/awslabs/aws-sam-cli">AWS SAM CLI</a></li>
    <li><strong>Resource Explorer</strong> - View your AWS Lambda remote functions & related CloudFormation stacks</li>
    <li><strong>Invoke Remote Lambda Functions</strong> - Invoke remote functions using a sharable run-configuration</li>
    <li><strong>Deploy SAM-based Applications</strong> - (<strong>Python only</strong>) Package, deploy & track SAM-based applications</li>
</ul>
</p>
    ]]></description>

    <vendor email="aws-toolkit-jetbrains@amazon.com" url="https://aws.amazon.com/">Amazon Web Services</vendor>
    <idea-version since-build="182" until-build="183.*"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends>org.jetbrains.plugins.yaml</depends>
    <depends optional="true" config-file="ext-java.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="ext-python.xml">com.intellij.modules.python</depends>

    <!-- Re-enable when changelog comes back -->
    <!-- xi:include href="/META-INF/change-notes.xml" xpointer="xpointer(/idea-plugin/*)">
        <xi:fallback/>
    </xi:include-->

    <extensionPoints>
        <extensionPoint qualifiedName="aws.toolkit.credentialProviderFactory"
                        beanClass="software.aws.toolkits.jetbrains.core.credentials.CredentialProviderFactoryEP">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.core.credentials.CredentialProviderFactory"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.runtimeGroup" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupInformation"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.packager" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.LambdaPackager"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.sam.debugSupport" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.execution.sam.SamDebugSupport"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>

        <extensionPoint qualifiedName="aws.toolkit.lambda.handlerResolver" beanClass="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroupExtensionPoint">
            <with attribute="implementation" implements="software.aws.toolkits.jetbrains.services.lambda.LambdaHandlerResolver"/>
            <with attribute="runtimeGroup" implements="software.aws.toolkits.jetbrains.services.lambda.RuntimeGroup"/>
        </extensionPoint>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Credential Management -->
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.core.RemoteResourceResolverProvider"
                            serviceImplementation="software.aws.toolkits.jetbrains.core.DefaultRemoteResourceResolverProvider"/>
        <applicationService serviceInterface="software.aws.toolkits.core.region.ToolkitRegionProvider"
                            serviceImplementation="software.aws.toolkits.jetbrains.core.region.AwsRegionProvider"
                            testServiceImplementation="software.aws.toolkits.jetbrains.core.region.MockRegionProvider"/>
        <applicationService serviceInterface="software.aws.toolkits.jetbrains.core.credentials.CredentialManager"
                            serviceImplementation="software.aws.toolkits.jetbrains.core.credentials.DefaultCredentialManager"
                            testServiceImplementation="software.aws.toolkits.jetbrains.core.credentials.MockCredentialsManager"/>
        <applicationService serviceImplementation="software.aws.toolkits.jetbrains.settings.AwsSettings"/>
        <applicationService serviceImplementation="software.aws.toolkits.jetbrains.settings.SamSettings"/>
        <projectService serviceImplementation="software.aws.toolkits.jetbrains.settings.LambdaSettings"/>

        <moduleService serviceImplementation="software.aws.toolkits.jetbrains.settings.DeploySettings"/>

        <projectService serviceInterface="software.aws.toolkits.jetbrains.core.credentials.ProjectAccountSettingsManager"
                        serviceImplementation="software.aws.toolkits.jetbrains.core.credentials.DefaultProjectAccountSettingsManager"
                        testServiceImplementation="software.aws.toolkits.jetbrains.core.credentials.MockProjectAccountSettingsManager"/>
        <postStartupActivity implementation="software.aws.toolkits.jetbrains.core.AwsSettingsPanelInstaller"/>
        <postStartupActivity implementation="software.aws.toolkits.jetbrains.core.AwsTelemetryPrompter"/>

        <applicationService serviceImplementation="software.aws.toolkits.jetbrains.core.AwsSdkClient"/>
        <projectService serviceInterface="software.aws.toolkits.core.ToolkitClientManager"
                        serviceImplementation="software.aws.toolkits.jetbrains.core.AwsClientManager"
                        testServiceImplementation="software.aws.toolkits.jetbrains.core.MockClientManager"/>
        <projectService serviceInterface="software.aws.toolkits.jetbrains.core.AwsResourceCache"
                        serviceImplementation="software.aws.toolkits.jetbrains.core.DefaultAwsResourceCache"
                        testServiceImplementation="software.aws.toolkits.jetbrains.core.MockResourceCache"/>
        <toolWindow id="aws.explorer" anchor="left" secondary="true"
                    factoryClass="software.aws.toolkits.jetbrains.core.explorer.AwsExplorerFactory"
                    icon="AwsIcons.Logos.AWS"/>

        <projectConfigurable id="aws" groupId="tools" bundle="software.aws.toolkits.resources.localized_messages"
                             key="aws.settings.title"
                             instance="software.aws.toolkits.jetbrains.settings.AwsSettingsConfigurable"/>

        <programRunner implementation="software.aws.toolkits.jetbrains.services.lambda.execution.sam.SamInvokeRunner"/>
        <programRunner implementation="software.aws.toolkits.jetbrains.services.lambda.execution.remote.RemoteLambdaRunner"/>
        <fileBasedIndex implementation="software.aws.toolkits.jetbrains.services.lambda.LambdaHandlerIndex"/>
        <fileBasedIndex implementation="software.aws.toolkits.jetbrains.services.cloudformation.CloudFormationTemplateIndex"/>

        <codeInsight.lineMarkerProvider language="" implementationClass="software.aws.toolkits.jetbrains.services.lambda.upload.LambdaLineMarker"/>
        <runLineMarkerContributor language="yaml" implementationClass="software.aws.toolkits.jetbrains.services.lambda.execution.template.YamlLambdaRunLineMarkerContributor"/>
        <configurationType implementation="software.aws.toolkits.jetbrains.services.lambda.execution.LambdaRunConfiguration"/>
        <runConfigurationProducer implementation="software.aws.toolkits.jetbrains.services.lambda.execution.sam.LambdaSamRunConfigurationProducer"/>
        <runConfigurationProducer implementation="software.aws.toolkits.jetbrains.services.lambda.execution.remote.LambdaRemoteRunConfigurationProducer"/>
    </extensions>

    <extensions defaultExtensionNs="aws.toolkit">
        <credentialProviderFactory implementation="software.aws.toolkits.jetbrains.core.credentials.ProfileCredentialProviderFactory"/>
    </extensions>

    <actions>
        <group id="aws.toolkit.explorer.lambda" popup="true" compact="false">
            <action id="lambda.function.create" class="software.aws.toolkits.jetbrains.services.lambda.upload.CreateLambdaFunction"/>
        </group>
        <group id="aws.toolkit.explorer.lambda.function" popup="true" compact="false">
            <reference ref="RunContextGroupInner"/>
            <separator/>
            <action id="lambda.function.gotohandler"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.GoToHandlerAction"/>
            <separator/>
            <action id="lambda.function.updateConfiguration"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.UpdateFunctionConfigurationAction"/>
            <action id="lambda.function.updateCode" class="software.aws.toolkits.jetbrains.services.lambda.actions.UpdateFunctionCodeAction"/>
            <action id="lambda.function.delete"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.DeleteFunctionAction"/>
        </group>
        <group id="aws.toolkit.explorer.lambda.stackFunction" popup="true" compact="false">
            <reference ref="RunContextGroupInner"/>
            <separator/>
            <action id="lambda.stackFunction.gotohandler" class="software.aws.toolkits.jetbrains.services.lambda.actions.GoToHandlerAction"/>
        </group>
        <group id="aws.toolkit.explorer.lambda.application" popup="true" compact="false">
            <action id="lambda.application.delete"
                    class="software.aws.toolkits.jetbrains.services.lambda.applications.DeleteApplicationAction"/>
        </group>
        <action class="software.aws.toolkits.jetbrains.core.SettingsSelectorAction" id="aws.settings.selector" icon="AwsIcons.Logos.AWS"/>
        <action class="software.aws.toolkits.jetbrains.core.credentials.CreateOrUpdateCredentialProfilesAction" id="aws.settings.upsertCredentials" icon="AwsIcons.Logos.AWS"/>

        <group id="aws.toolkit.serverless.template">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="EditorTabPopupMenu" anchor="last"/>

            <separator/>
            <action id="serverless.application.deploy"
                    class="software.aws.toolkits.jetbrains.services.lambda.actions.DeployServerlessApplicationAction"/>
            <separator/>
        </group>
    </actions>

</idea-plugin>
