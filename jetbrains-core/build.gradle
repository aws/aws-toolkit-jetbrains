import software.amazon.awssdk.codegen.C2jModels
import software.amazon.awssdk.codegen.CodeGenerator
import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig
import software.amazon.awssdk.codegen.model.service.ServiceModel
import software.amazon.awssdk.codegen.utils.ModelLoaderUtils

apply plugin: 'org.jetbrains.intellij'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("software.amazon.awssdk:codegen:$awsSdk2Version")
    }
}

intellij {
    version "IC-" + ideaVersion
    pluginName 'aws-intellij-toolkit'
    updateSinceUntilBuild false
    downloadSources = false //TODO figure out why setting this to true is causing a problem
    plugins = ["PythonCore:2017.3.173.4301.35"]
}

jar.baseName = 'aws-intellij-toolkit-core'

configurations {
    testArtifacts
}

def telemetryGeneratedDir = file("$buildDir/generated-srcs/telemetry")

idea {
    module {
        sourceDirs += telemetryGeneratedDir
    }
}

sourceSets {
    main.java.srcDir telemetryGeneratedDir
}

task generateTelemetryModel() {
    def inputModel = file("resources/models/ToolkitTelemetryLambda.api.json")

    doLast {
        def models = C2jModels.builder()
                .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, inputModel))
                .customizationConfig(CustomizationConfig.DEFAULT)
                .build()
        CodeGenerator.builder().models(models).sourcesDirectory(telemetryGeneratedDir.toString()).build().execute()
    }

    inputs.file(inputModel)
    outputs.dir(telemetryGeneratedDir)
}

compileKotlin.dependsOn(generateTelemetryModel)

task testJar(type: Jar) {
    baseName = "${project.name}-test"
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
}

dependencies {
    compile(project(":core")) {
        exclude group: 'org.slf4j'
    }
    compile("software.amazon.awssdk:s3:$awsSdk2Version") {
        exclude group: 'org.slf4j'
    }
    compile("software.amazon.awssdk:lambda:$awsSdk2Version") {
        exclude group: 'org.slf4j'
    }
    compile("software.amazon.awssdk:iam:$awsSdk2Version") {
        exclude group: 'org.slf4j'
    }
    compile "com.amazonaws:aws-java-sdk-core:$awsSdkVersion"
    runtime "org.jetbrains.kotlin:kotlin-reflect"
    testCompile project(":jetbrains-testutils")
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
}