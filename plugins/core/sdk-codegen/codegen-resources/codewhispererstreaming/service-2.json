{
    "version":"2.0",
    "metadata":{
        "apiVersion":"2023-11-27",
        "endpointPrefix":"amazoncodewhispererstreamingservice",
        "jsonVersion":"1.0",
        "protocol":"json",
        "serviceFullName":"Amazon CodeWhisperer Streaming",
        "serviceId":"CodeWhispererStreaming",
        "signatureVersion":"bearer",
        "signingName":"amazoncodewhispererstreamingservice",
        "targetPrefix":"AmazonCodeWhispererStreamingService",
        "uid":"codewhispererstreaming-2023-11-27"
    },
    "operations":{
        "ExportResultArchive":{
            "name":"ExportResultArchive",
            "http":{
                "method":"POST",
                "requestUri":"/"
            },
            "input":{"shape":"ExportResultArchiveRequest"},
            "output":{"shape":"ExportResultArchiveResponse"},
            "errors":[
                {"shape":"ThrottlingException"},
                {"shape":"ConflictException"},
                {"shape":"ResourceNotFoundException"},
                {"shape":"InternalServerException"},
                {"shape":"ValidationException"},
                {"shape":"AccessDeniedException"}
            ],
            "documentation":"<p>API to export operation result as an archive</p>"
        },
        "GenerateAssistantResponse":{
            "name":"GenerateAssistantResponse",
            "http":{
                "method":"POST",
                "requestUri":"/"
            },
            "input":{"shape":"GenerateAssistantResponseRequest"},
            "output":{"shape":"GenerateAssistantResponseResponse"},
            "errors":[
                {"shape":"ThrottlingException"},
                {"shape":"InternalServerException"},
                {"shape":"ValidationException"},
                {"shape":"AccessDeniedException"}
            ],
            "documentation":"<p>API to generate assistant response.</p>"
        },
        "GenerateTaskAssistPlan":{
            "name":"GenerateTaskAssistPlan",
            "http":{
                "method":"POST",
                "requestUri":"/"
            },
            "input":{"shape":"GenerateTaskAssistPlanRequest"},
            "output":{"shape":"GenerateTaskAssistPlanResponse"},
            "errors":[
                {"shape":"ThrottlingException"},
                {"shape":"ConflictException"},
                {"shape":"ResourceNotFoundException"},
                {"shape":"InternalServerException"},
                {"shape":"ValidationException"},
                {"shape":"AccessDeniedException"}
            ],
            "documentation":"<p>API to generate task assit plan.</p>"
        }
    },
    "shapes":{
        "AccessDeniedException":{
            "type":"structure",
            "required":["message"],
            "members":{
                "message":{"shape":"String"},
                "reason":{"shape":"AccessDeniedExceptionReason"}
            },
            "documentation":"<p>This exception is thrown when the user does not have sufficient access to perform this action.</p>",
            "exception":true
        },
        "AccessDeniedExceptionReason":{
            "type":"string",
            "documentation":"<p>Reason for AccessDeniedException</p>",
            "enum":["UNAUTHORIZED_CUSTOMIZATION_RESOURCE_ACCESS"]
        },
        "ArtifactId":{
            "type":"string",
            "max":126,
            "min":1,
            "pattern":"[a-zA-Z0-9-_]+"
        },
        "AssistantResponseEvent":{
            "type":"structure",
            "required":["content"],
            "members":{
                "content":{
                    "shape":"AssistantResponseEventContentString",
                    "documentation":"<p>The content of the text message in markdown format.</p>"
                }
            },
            "documentation":"<p>Streaming Response Event for Assistant Markdown text message.</p>",
            "event":true
        },
        "AssistantResponseEventContentString":{
            "type":"string",
            "max":10240,
            "min":0,
            "sensitive":true
        },
        "AssistantResponseMessage":{
            "type":"structure",
            "required":["content"],
            "members":{
                "messageId":{"shape":"MessageId"},
                "content":{
                    "shape":"AssistantResponseMessageContentString",
                    "documentation":"<p>The content of the text message in markdown format.</p>"
                },
                "supplementaryWebLinks":{
                    "shape":"SupplementaryWebLinks",
                    "documentation":"<p>Web References</p>"
                },
                "references":{
                    "shape":"References",
                    "documentation":"<p>Code References</p>"
                },
                "followupPrompt":{
                    "shape":"FollowupPrompt",
                    "documentation":"<p>Followup Prompt</p>"
                }
            },
            "documentation":"<p>Markdown text message.</p>"
        },
        "AssistantResponseMessageContentString":{
            "type":"string",
            "max":4096,
            "min":0,
            "sensitive":true
        },
        "BinaryMetadataEvent":{
            "type":"structure",
            "members":{
                "size":{
                    "shape":"Long",
                    "documentation":"<p>Content length of the binary payload</p>"
                },
                "mimeType":{
                    "shape":"String",
                    "documentation":"<p>Content type of the response</p>"
                },
                "contentChecksum":{
                    "shape":"ContentChecksum",
                    "documentation":"<p>Content checksum of the binary payload</p>"
                },
                "contentChecksumType":{
                    "shape":"ContentChecksumType",
                    "documentation":"<p>Content checksum type of the binary payload</p>"
                }
            },
            "documentation":"<p>Payload Part</p>",
            "event":true,
            "sensitive":true
        },
        "BinaryPayloadEvent":{
            "type":"structure",
            "members":{
                "bytes":{"shape":"PartBody"}
            },
            "documentation":"<p>Payload Part</p>",
            "event":true,
            "sensitive":true
        },
        "ChatHistory":{
            "type":"list",
            "member":{"shape":"ChatMessage"},
            "documentation":"<p>Indicates Participant in Chat conversation</p>",
            "max":10,
            "min":0
        },
        "ChatMessage":{
            "type":"structure",
            "members":{
                "userInputMessage":{"shape":"UserInputMessage"},
                "assistantResponseMessage":{"shape":"AssistantResponseMessage"}
            },
            "union":true
        },
        "ChatResponseStream":{
            "type":"structure",
            "members":{
                "messageMetadataEvent":{
                    "shape":"MessageMetadataEvent",
                    "documentation":"<p>Message Metadata event</p>"
                },
                "assistantResponseEvent":{
                    "shape":"AssistantResponseEvent",
                    "documentation":"<p>Assistant response event - Text / Code snippet</p>"
                },
                "codeReferenceEvent":{
                    "shape":"CodeReferenceEvent",
                    "documentation":"<p>Code References event</p>"
                },
                "supplementaryWebLinksEvent":{
                    "shape":"SupplementaryWebLinksEvent",
                    "documentation":"<p>Web Reference links event</p>"
                },
                "followupPromptEvent":{
                    "shape":"FollowupPromptEvent",
                    "documentation":"<p>Followup prompt event</p>"
                },
                "invalidStateEvent":{
                    "shape":"InvalidStateEvent",
                    "documentation":"<p>Invalid State event</p>"
                },
                "error":{
                    "shape":"InternalServerException",
                    "documentation":"<p>Internal Server Exception</p>"
                }
            },
            "documentation":"<p>Streaming events from UniDirectional Streaming Conversational APIs.</p>",
            "eventstream":true
        },
        "ChatTriggerType":{
            "type":"string",
            "documentation":"<p>Trigger Reason for Chat</p>",
            "enum":[
                "MANUAL",
                "DIAGNOSTIC"
            ]
        },
        "CodeReferenceEvent":{
            "type":"structure",
            "members":{
                "references":{
                    "shape":"References",
                    "documentation":"<p>Code References for Assistant Response Message</p>"
                }
            },
            "documentation":"<p>Streaming Response Event for CodeReferences</p>",
            "event":true
        },
        "ConflictException":{
            "type":"structure",
            "required":["message"],
            "members":{
                "message":{"shape":"String"}
            },
            "documentation":"<p>This exception is thrown when the action to perform could not be completed because the resource is in a conflicting state.</p>",
            "exception":true
        },
        "ContentChecksum":{
            "type":"string",
            "max":512,
            "min":1
        },
        "ContentChecksumType":{
            "type":"string",
            "enum":["SHA_256"]
        },
        "ContextTruncationScheme":{
            "type":"string",
            "documentation":"<p>Workspace context truncation schemes based on usecase</p>",
            "enum":[
                "ANALYSIS",
                "GUMBY"
            ]
        },
        "ConversationId":{
            "type":"string",
            "documentation":"<p>ID which represents a multi-turn conversation</p>",
            "max":128,
            "min":1
        },
        "ConversationState":{
            "type":"structure",
            "required":[
                "currentMessage",
                "chatTriggerType"
            ],
            "members":{
                "conversationId":{
                    "shape":"ConversationId",
                    "documentation":"<p>Unique identifier for the chat conversation stream</p>"
                },
                "history":{
                    "shape":"ChatHistory",
                    "documentation":"<p>Holds the history of chat messages.</p>"
                },
                "currentMessage":{
                    "shape":"ChatMessage",
                    "documentation":"<p>Holds the current message being processed or displayed.</p>"
                },
                "chatTriggerType":{
                    "shape":"ChatTriggerType",
                    "documentation":"<p>Trigger Reason for Chat</p>"
                }
            },
            "documentation":"<p>Structure to represent the current state of a chat conversation.</p>"
        },
        "CursorState":{
            "type":"structure",
            "members":{
                "position":{
                    "shape":"Position",
                    "documentation":"<p>Represents a cursor position in a Text Document</p>"
                },
                "range":{
                    "shape":"Range",
                    "documentation":"<p>Represents a text selection in a Text Document</p>"
                }
            },
            "documentation":"<p>Represents the state of the Cursor in an Editor</p>",
            "union":true
        },
        "Diagnostic":{
            "type":"structure",
            "members":{
                "textDocumentDiagnostic":{
                    "shape":"TextDocumentDiagnostic",
                    "documentation":"<p>Diagnostics originating from a TextDocument</p>"
                },
                "runtimeDiagnostic":{
                    "shape":"RuntimeDiagnostic",
                    "documentation":"<p>Diagnostics originating from a Runtime</p>"
                }
            },
            "documentation":"<p>Represents a Diagnostic message</p>",
            "union":true
        },
        "DiagnosticSeverity":{
            "type":"string",
            "documentation":"<p>Diagnostic Error types</p>",
            "enum":[
                "ERROR",
                "WARNING",
                "INFORMATION",
                "HINT"
            ]
        },
        "DocumentSymbol":{
            "type":"structure",
            "required":[
                "name",
                "type"
            ],
            "members":{
                "name":{
                    "shape":"DocumentSymbolNameString",
                    "documentation":"<p>Name of the Document Symbol</p>"
                },
                "type":{
                    "shape":"SymbolType",
                    "documentation":"<p>Symbol type - DECLARATION / USAGE</p>"
                },
                "source":{
                    "shape":"DocumentSymbolSourceString",
                    "documentation":"<p>Symbol package / source for FullyQualified names</p>"
                }
            }
        },
        "DocumentSymbolNameString":{
            "type":"string",
            "max":256,
            "min":1
        },
        "DocumentSymbolSourceString":{
            "type":"string",
            "max":256,
            "min":1
        },
        "DocumentSymbols":{
            "type":"list",
            "member":{"shape":"DocumentSymbol"},
            "max":1000,
            "min":0
        },
        "EditorState":{
            "type":"structure",
            "members":{
                "document":{
                    "shape":"TextDocument",
                    "documentation":"<p>Represents currently edited file</p>"
                },
                "cursorState":{
                    "shape":"CursorState",
                    "documentation":"<p>Position of the cursor</p>"
                }
            },
            "documentation":"<p>Represents the state of an Editor</p>"
        },
        "EnvState":{
            "type":"structure",
            "members":{
                "operatingSystem":{
                    "shape":"EnvStateOperatingSystemString",
                    "documentation":"<p>The name of the operating system in use</p>"
                },
                "currentWorkingDirectory":{
                    "shape":"EnvStateCurrentWorkingDirectoryString",
                    "documentation":"<p>The current working directory of the environment</p>"
                },
                "environmentVariables":{
                    "shape":"EnvironmentVariables",
                    "documentation":"<p>The environment variables set in the current environment</p>"
                }
            },
            "documentation":"<p>State related to the user's environment</p>"
        },
        "EnvStateCurrentWorkingDirectoryString":{
            "type":"string",
            "max":256,
            "min":1,
            "sensitive":true
        },
        "EnvStateOperatingSystemString":{
            "type":"string",
            "max":32,
            "min":1,
            "pattern":"(macos|linux|windows)"
        },
        "EnvironmentVariable":{
            "type":"structure",
            "members":{
                "key":{
                    "shape":"EnvironmentVariableKeyString",
                    "documentation":"<p>The key of an environment variable</p>"
                },
                "value":{
                    "shape":"EnvironmentVariableValueString",
                    "documentation":"<p>The value of an environment variable</p>"
                }
            },
            "documentation":"<p>An environment variable</p>"
        },
        "EnvironmentVariableKeyString":{
            "type":"string",
            "max":256,
            "min":1,
            "sensitive":true
        },
        "EnvironmentVariableValueString":{
            "type":"string",
            "max":1024,
            "min":1,
            "sensitive":true
        },
        "EnvironmentVariables":{
            "type":"list",
            "member":{"shape":"EnvironmentVariable"},
            "documentation":"<p>A list of environment variables</p>",
            "max":100,
            "min":0
        },
        "ExportContext":{
            "type":"structure",
            "members":{
                "transformationExportContext":{"shape":"TransformationExportContext"}
            },
            "documentation":"<p>Export Context</p>",
            "union":true
        },
        "ExportIntent":{
            "type":"string",
            "documentation":"<p>Export Intent</p>",
            "enum":[
                "TRANSFORMATION",
                "TASK_ASSIST"
            ]
        },
        "ExportResultArchiveRequest":{
            "type":"structure",
            "required":[
                "exportId",
                "exportIntent"
            ],
            "members":{
                "exportId":{"shape":"String"},
                "exportIntent":{"shape":"ExportIntent"},
                "exportContext":{"shape":"ExportContext"}
            },
            "documentation":"<p>Structure to represent a new ExportResultArchive request.</p>"
        },
        "ExportResultArchiveResponse":{
            "type":"structure",
            "required":["body"],
            "members":{
                "body":{"shape":"ResultArchiveStream"}
            },
            "documentation":"<p>Structure to represent ExportResultArchive response.</p>"
        },
        "FollowupPrompt":{
            "type":"structure",
            "required":["content"],
            "members":{
                "content":{
                    "shape":"FollowupPromptContentString",
                    "documentation":"<p>The content of the text message in markdown format.</p>"
                },
                "userIntent":{
                    "shape":"UserIntent",
                    "documentation":"<p>User Intent</p>"
                }
            },
            "documentation":"<p>Followup Prompt for the Assistant Response</p>"
        },
        "FollowupPromptContentString":{
            "type":"string",
            "max":4096,
            "min":0,
            "sensitive":true
        },
        "FollowupPromptEvent":{
            "type":"structure",
            "members":{
                "followupPrompt":{"shape":"FollowupPrompt"}
            },
            "documentation":"<p>Streaming Response Event for Followup Prompt.</p>",
            "event":true
        },
        "GenerateAssistantResponseRequest":{
            "type":"structure",
            "required":["conversationState"],
            "members":{
                "conversationState":{"shape":"ConversationState"}
            },
            "documentation":"<p>Structure to represent a new generate assistant response request.</p>"
        },
        "GenerateAssistantResponseResponse":{
            "type":"structure",
            "required":[
                "conversationId",
                "generateAssistantResponseResponse"
            ],
            "members":{
                "conversationId":{"shape":"ConversationId"},
                "generateAssistantResponseResponse":{"shape":"ChatResponseStream"}
            },
            "documentation":"<p>Structure to represent generate assistant response response.</p>"
        },
        "GenerateTaskAssistPlanRequest":{
            "type":"structure",
            "required":[
                "conversationState",
                "workspaceState"
            ],
            "members":{
                "conversationState":{"shape":"ConversationState"},
                "workspaceState":{"shape":"WorkspaceState"}
            },
            "documentation":"<p>Structure to represent execute planning interaction request.</p>"
        },
        "GenerateTaskAssistPlanResponse":{
            "type":"structure",
            "members":{
                "planningResponseStream":{"shape":"ChatResponseStream"}
            },
            "documentation":"<p>Structure to represent execute planning interaction response.</p>"
        },
        "GitState":{
            "type":"structure",
            "members":{
                "status":{
                    "shape":"GitStateStatusString",
                    "documentation":"<p>The output of the command <code>git status --porcelain=v1 -b</code></p>"
                }
            },
            "documentation":"<p>State related to the Git VSC</p>"
        },
        "GitStateStatusString":{
            "type":"string",
            "max":4096,
            "min":0,
            "sensitive":true
        },
        "Integer":{
            "type":"integer",
            "box":true
        },
        "InternalServerException":{
            "type":"structure",
            "required":["message"],
            "members":{
                "message":{"shape":"String"}
            },
            "documentation":"<p>This exception is thrown when an unexpected error occurred during the processing of a request.</p>",
            "exception":true,
            "fault":true,
            "retryable":{"throttling":false}
        },
        "InvalidStateEvent":{
            "type":"structure",
            "required":[
                "reason",
                "message"
            ],
            "members":{
                "reason":{"shape":"InvalidStateReason"},
                "message":{"shape":"InvalidStateEventMessageString"}
            },
            "documentation":"<p>Streaming Response Event when an Invalid State is reached</p>",
            "event":true
        },
        "InvalidStateEventMessageString":{
            "type":"string",
            "max":10240,
            "min":0
        },
        "InvalidStateReason":{
            "type":"string",
            "documentation":"<p>Reasons for Invalid State Event</p>",
            "enum":["INVALID_TASK_ASSIST_PLAN"]
        },
        "Long":{
            "type":"long",
            "box":true
        },
        "MessageId":{
            "type":"string",
            "documentation":"<p>Unique identifier for the chat message</p>",
            "max":128,
            "min":0
        },
        "MessageMetadataEvent":{
            "type":"structure",
            "members":{
                "conversationId":{
                    "shape":"MessageMetadataEventConversationIdString",
                    "documentation":"<p>Unique identifier for the conversation</p>"
                }
            },
            "documentation":"<p>Streaming Response Event for AssistantResponse Metadata</p>",
            "event":true
        },
        "MessageMetadataEventConversationIdString":{
            "type":"string",
            "max":128,
            "min":0
        },
        "PartBody":{
            "type":"blob",
            "documentation":"<p>Payload Part's body</p>",
            "max":1000000,
            "min":0,
            "sensitive":true
        },
        "Position":{
            "type":"structure",
            "required":[
                "line",
                "character"
            ],
            "members":{
                "line":{
                    "shape":"Integer",
                    "documentation":"<p>Line position in a document.</p>"
                },
                "character":{
                    "shape":"Integer",
                    "documentation":"<p>Character offset on a line in a document (zero-based)</p>"
                }
            },
            "documentation":"<p>Indicates Cursor postion in a Text Document</p>"
        },
        "ProgrammingLanguage":{
            "type":"structure",
            "required":["languageName"],
            "members":{
                "languageName":{"shape":"ProgrammingLanguageLanguageNameString"}
            },
            "documentation":"<p>Programming Languages supported by CodeWhisperer</p>"
        },
        "ProgrammingLanguageLanguageNameString":{
            "type":"string",
            "max":128,
            "min":1,
            "pattern":"(python|javascript|java|csharp|typescript|c|cpp|go|kotlin|php|ruby|rust|scala|shell|sql|json|yaml|vue|tf|tsx|jsx)"
        },
        "Range":{
            "type":"structure",
            "required":[
                "start",
                "end"
            ],
            "members":{
                "start":{
                    "shape":"Position",
                    "documentation":"<p>The range's start position.</p>"
                },
                "end":{
                    "shape":"Position",
                    "documentation":"<p>The range's end position.</p>"
                }
            },
            "documentation":"<p>Indicates Range / Span in a Text Document</p>"
        },
        "Reference":{
            "type":"structure",
            "members":{
                "licenseName":{
                    "shape":"ReferenceLicenseNameString",
                    "documentation":"<p>License name</p>"
                },
                "repository":{
                    "shape":"ReferenceRepositoryString",
                    "documentation":"<p>Code Repsitory for the associated reference</p>"
                },
                "url":{
                    "shape":"ReferenceUrlString",
                    "documentation":"<p>Respository URL</p>"
                },
                "recommendationContentSpan":{
                    "shape":"Span",
                    "documentation":"<p>Span / Range for the Reference</p>"
                }
            },
            "documentation":"<p>Code Reference / Repository details</p>"
        },
        "ReferenceLicenseNameString":{
            "type":"string",
            "max":1024,
            "min":1
        },
        "ReferenceRepositoryString":{
            "type":"string",
            "max":1024,
            "min":1
        },
        "ReferenceUrlString":{
            "type":"string",
            "max":1024,
            "min":1
        },
        "References":{
            "type":"list",
            "member":{"shape":"Reference"},
            "max":10,
            "min":0
        },
        "ResourceNotFoundException":{
            "type":"structure",
            "required":["message"],
            "members":{
                "message":{"shape":"String"}
            },
            "documentation":"<p>This exception is thrown when describing a resource that does not exist.</p>",
            "exception":true
        },
        "ResultArchiveStream":{
            "type":"structure",
            "members":{
                "binaryMetadataEvent":{"shape":"BinaryMetadataEvent"},
                "binaryPayloadEvent":{"shape":"BinaryPayloadEvent"},
                "internalServerException":{"shape":"InternalServerException"}
            },
            "documentation":"<p>Response Stream</p>",
            "eventstream":true
        },
        "RuntimeDiagnostic":{
            "type":"structure",
            "required":[
                "source",
                "severity",
                "message"
            ],
            "members":{
                "source":{
                    "shape":"RuntimeDiagnosticSourceString",
                    "documentation":"<p>A human-readable string describing the source of the diagnostic</p>"
                },
                "severity":{
                    "shape":"DiagnosticSeverity",
                    "documentation":"<p>Diagnostic Error type</p>"
                },
                "message":{
                    "shape":"RuntimeDiagnosticMessageString",
                    "documentation":"<p>The diagnostic's message.</p>"
                }
            },
            "documentation":"<p>Structure to represent metadata about a Runtime Diagnostics</p>"
        },
        "RuntimeDiagnosticMessageString":{
            "type":"string",
            "max":1024,
            "min":0,
            "sensitive":true
        },
        "RuntimeDiagnosticSourceString":{
            "type":"string",
            "max":1024,
            "min":0,
            "sensitive":true
        },
        "SensitiveString":{
            "type":"string",
            "sensitive":true
        },
        "ShellHistory":{
            "type":"list",
            "member":{"shape":"ShellHistoryEntry"},
            "documentation":"<p>A list of shell history entries</p>",
            "max":20,
            "min":0
        },
        "ShellHistoryEntry":{
            "type":"structure",
            "required":["command"],
            "members":{
                "command":{
                    "shape":"ShellHistoryEntryCommandString",
                    "documentation":"<p>The shell command that was run</p>"
                },
                "directory":{
                    "shape":"ShellHistoryEntryDirectoryString",
                    "documentation":"<p>The directory the command was ran in</p>"
                },
                "exitCode":{
                    "shape":"Integer",
                    "documentation":"<p>The exit code of the command after it finished</p>"
                },
                "stdout":{
                    "shape":"ShellHistoryEntryStdoutString",
                    "documentation":"<p>The stdout from the command</p>"
                },
                "stderr":{
                    "shape":"ShellHistoryEntryStderrString",
                    "documentation":"<p>The stderr from the command</p>"
                }
            },
            "documentation":"<p>An single entry in the shell history</p>"
        },
        "ShellHistoryEntryCommandString":{
            "type":"string",
            "max":1024,
            "min":1,
            "sensitive":true
        },
        "ShellHistoryEntryDirectoryString":{
            "type":"string",
            "max":256,
            "min":1,
            "sensitive":true
        },
        "ShellHistoryEntryStderrString":{
            "type":"string",
            "max":4096,
            "min":0,
            "sensitive":true
        },
        "ShellHistoryEntryStdoutString":{
            "type":"string",
            "max":4096,
            "min":0,
            "sensitive":true
        },
        "ShellState":{
            "type":"structure",
            "required":["shellName"],
            "members":{
                "shellName":{
                    "shape":"ShellStateShellNameString",
                    "documentation":"<p>The name of the current shell</p>"
                },
                "shellHistory":{
                    "shape":"ShellHistory",
                    "documentation":"<p>The history previous shell commands for the current shell</p>"
                }
            },
            "documentation":"<p>Represents the state of a shell</p>"
        },
        "ShellStateShellNameString":{
            "type":"string",
            "max":32,
            "min":1,
            "pattern":"(zsh|bash|fish|pwsh|nu)"
        },
        "Span":{
            "type":"structure",
            "members":{
                "start":{"shape":"SpanStartInteger"},
                "end":{"shape":"SpanEndInteger"}
            },
            "documentation":"<p>Represents span in a text</p>"
        },
        "SpanEndInteger":{
            "type":"integer",
            "box":true,
            "min":0
        },
        "SpanStartInteger":{
            "type":"integer",
            "box":true,
            "min":0
        },
        "String":{"type":"string"},
        "SupplementaryWebLink":{
            "type":"structure",
            "required":[
                "url",
                "title"
            ],
            "members":{
                "url":{
                    "shape":"SupplementaryWebLinkUrlString",
                    "documentation":"<p>URL of the web reference link</p>"
                },
                "title":{
                    "shape":"SupplementaryWebLinkTitleString",
                    "documentation":"<p>Title of the web reference link</p>"
                },
                "snippet":{
                    "shape":"SupplementaryWebLinkSnippetString",
                    "documentation":"<p>Relevant text snippet from the link</p>"
                }
            },
            "documentation":"<p>Represents an additional reference link retured with the Chat message</p>"
        },
        "SupplementaryWebLinkSnippetString":{
            "type":"string",
            "max":1024,
            "min":1,
            "sensitive":true
        },
        "SupplementaryWebLinkTitleString":{
            "type":"string",
            "max":1024,
            "min":1,
            "sensitive":true
        },
        "SupplementaryWebLinkUrlString":{
            "type":"string",
            "max":1024,
            "min":1,
            "sensitive":true
        },
        "SupplementaryWebLinks":{
            "type":"list",
            "member":{"shape":"SupplementaryWebLink"},
            "max":10,
            "min":0
        },
        "SupplementaryWebLinksEvent":{
            "type":"structure",
            "members":{
                "supplementaryWebLinks":{
                    "shape":"SupplementaryWebLinks",
                    "documentation":"<p>Web References for Assistant Response Message</p>"
                }
            },
            "documentation":"<p>Streaming Response Event for SupplementaryWebLinks</p>",
            "event":true
        },
        "SymbolType":{
            "type":"string",
            "enum":[
                "DECLARATION",
                "USAGE"
            ]
        },
        "TextDocument":{
            "type":"structure",
            "required":["relativeFilePath"],
            "members":{
                "relativeFilePath":{
                    "shape":"TextDocumentRelativeFilePathString",
                    "documentation":"<p>Filepath relative to the root of the workspace</p>"
                },
                "programmingLanguage":{
                    "shape":"ProgrammingLanguage",
                    "documentation":"<p>The text document's language identifier.</p>"
                },
                "text":{
                    "shape":"TextDocumentTextString",
                    "documentation":"<p>Content of the text document</p>"
                },
                "documentSymbols":{
                    "shape":"DocumentSymbols",
                    "documentation":"<p>DocumentSymbols parsed from a text document</p>"
                }
            },
            "documentation":"<p>Represents a Text Document / File</p>"
        },
        "TextDocumentDiagnostic":{
            "type":"structure",
            "required":[
                "document",
                "range",
                "source",
                "severity",
                "message"
            ],
            "members":{
                "document":{
                    "shape":"TextDocument",
                    "documentation":"<p>Represents a Text Document associated with Diagnostic</p>"
                },
                "range":{
                    "shape":"Range",
                    "documentation":"<p>The range at which the message applies.</p>"
                },
                "source":{
                    "shape":"SensitiveString",
                    "documentation":"<p>A human-readable string describing the source of the diagnostic</p>"
                },
                "severity":{
                    "shape":"DiagnosticSeverity",
                    "documentation":"<p>Diagnostic Error type</p>"
                },
                "message":{
                    "shape":"TextDocumentDiagnosticMessageString",
                    "documentation":"<p>The diagnostic's message.</p>"
                }
            },
            "documentation":"<p>Structure to represent metadata about a TextDocument Diagnostic</p>"
        },
        "TextDocumentDiagnosticMessageString":{
            "type":"string",
            "max":1024,
            "min":0,
            "sensitive":true
        },
        "TextDocumentRelativeFilePathString":{
            "type":"string",
            "max":4096,
            "min":1,
            "sensitive":true
        },
        "TextDocumentTextString":{
            "type":"string",
            "max":10240,
            "min":0,
            "sensitive":true
        },
        "ThrottlingException":{
            "type":"structure",
            "required":["message"],
            "members":{
                "message":{"shape":"String"}
            },
            "documentation":"<p>This exception is thrown when request was denied due to request throttling.</p>",
            "exception":true,
            "retryable":{"throttling":true}
        },
        "TransformationDownloadArtifactType":{
            "type":"string",
            "enum":["ClientInstructions"]
        },
        "TransformationExportContext":{
            "type":"structure",
            "required":[
                "downloadArtifactId",
                "downloadArtifactType"
            ],
            "members":{
                "downloadArtifactId":{"shape":"ArtifactId"},
                "downloadArtifactType":{"shape":"TransformationDownloadArtifactType"}
            },
            "documentation":"<p>Transformation export context</p>"
        },
        "UploadId":{
            "type":"string",
            "documentation":"<p>Upload ID returned by CreateUploadUrl API</p>",
            "max":128,
            "min":1
        },
        "UserInputMessage":{
            "type":"structure",
            "required":["content"],
            "members":{
                "content":{
                    "shape":"UserInputMessageContentString",
                    "documentation":"<p>The content of the chat message.</p>"
                },
                "userInputMessageContext":{
                    "shape":"UserInputMessageContext",
                    "documentation":"<p>Chat message context associated with the Chat Message</p>"
                },
                "userIntent":{
                    "shape":"UserIntent",
                    "documentation":"<p>User Intent</p>"
                }
            },
            "documentation":"<p>Structure to represent a chat input message from User</p>"
        },
        "UserInputMessageContentString":{
            "type":"string",
            "max":4096,
            "min":0,
            "sensitive":true
        },
        "UserInputMessageContext":{
            "type":"structure",
            "members":{
                "editorState":{
                    "shape":"EditorState",
                    "documentation":"<p>Editor state chat message context.</p>"
                },
                "shellState":{
                    "shape":"ShellState",
                    "documentation":"<p>Shell state chat message context.</p>"
                },
                "gitState":{
                    "shape":"GitState",
                    "documentation":"<p>Git state chat message context.</p>"
                },
                "envState":{
                    "shape":"EnvState",
                    "documentation":"<p>Environment state chat messaage context.</p>"
                },
                "diagnostic":{
                    "shape":"Diagnostic",
                    "documentation":"<p>Diagnostic chat message context.</p>"
                }
            },
            "documentation":"<p>Additional Chat message context associated with the Chat Message</p>"
        },
        "UserIntent":{
            "type":"string",
            "documentation":"<p>User Intent</p>",
            "enum":[
                "SUGGEST_ALTERNATE_IMPLEMENTATION",
                "APPLY_COMMON_BEST_PRACTICES",
                "IMPROVE_CODE",
                "SHOW_EXAMPLES",
                "CITE_SOURCES",
                "EXPLAIN_LINE_BY_LINE",
                "EXPLAIN_CODE_SELECTION"
            ]
        },
        "ValidationException":{
            "type":"structure",
            "required":["message"],
            "members":{
                "message":{"shape":"String"},
                "reason":{"shape":"ValidationExceptionReason"}
            },
            "documentation":"<p>This exception is thrown when the input fails to satisfy the constraints specified by the service.</p>",
            "exception":true
        },
        "ValidationExceptionReason":{
            "type":"string",
            "documentation":"<p>Reason for ValidationException</p>",
            "enum":[
                "INVALID_CONVERSATION_ID",
                "CONTENT_LENGTH_EXCEEDS_THRESHOLD"
            ]
        },
        "WorkspaceState":{
            "type":"structure",
            "required":[
                "uploadId",
                "programmingLanguage"
            ],
            "members":{
                "uploadId":{
                    "shape":"UploadId",
                    "documentation":"<p>Upload ID representing an Upload using a PreSigned URL</p>"
                },
                "programmingLanguage":{
                    "shape":"ProgrammingLanguage",
                    "documentation":"<p>Primary programming language of the Workspace</p>"
                },
                "contextTruncationScheme":{
                    "shape":"ContextTruncationScheme",
                    "documentation":"<p>Workspace context truncation schemes based on usecase</p>"
                }
            },
            "documentation":"<p>Represents a Workspace state uploaded to S3 for Async Code Actions</p>"
        }
    }
}
