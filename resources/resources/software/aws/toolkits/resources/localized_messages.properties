# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
delete_resource.delete_failed=Failed to delete {0} ''{1}''
delete_resource.deleted=Deleted {0} ''{1}''
delete_resource.message=Are you sure you want to delete {0} ''{1}''?\n\nType the {0} name below to confirm.
delete_resource.title=Delete {0} {1}
loading_resource.loading=Still loading...
loading_resource.failed=Failed loading resources
explorer.label=AWS Explorer
explorer.view_documentation=View Documentation
explorer.view_source=View Source on GitHub
environment.variables.dialog.title=Environment Variables
general.create_button=Create
general.close_button=Close
general.file_not_found=File not found: "{0}"

lambda.upload.create.title=Create Function
lambda.upload.updateConfiguration.title=Update Configuration for {0}
lambda.upload.updateCode.title=Update Code for {0}
lambda.create.function_name.label=Name:
lambda.create.description.label=Description:
lambda.handler.label=Handler:
lambda.runtime.label=Runtime:
lambda.create.timeout.label=Timeout (seconds):
lambda.create.memory.label=Memory (MB):
lambda.create.env_vars.label=Environment Variables:
lambda.create.iam.role.label=IAM Role:
lambda.create.enable.xray.label=Enable AWS X-Ray
lambda.create.source_bucket.label=Source Bucket:
lambda.function.name.tooltip=The function's name, which can contain only the letters A through Z, the letters a through z, the numbers 0 through 9, the hyphen character (-), and the underscore character (_). This name must be less than 64 characters in length.
lambda.function.description.tooltip=Any meaningful description about the function.
lambda.function.handler.tooltip=The identifier of the corresponding function handler for Java or the function handler for Python.
lambda.function.runtime.tooltip=The identifier of the runtime for Lambda to use.
lambda.function.timeout.tooltip=The amount of time that Lambda allows a function to run before stopping it. Specify an amount of up to 900 seconds (15 minutes).
lambda.function.memory.tooltip=The amount of memory available to the function during its execution. Specify an amount between 128 MB and 3,008 MB in 64 MB increments.
lambda.function.env_vars.tooltip=Any environment variables for the function to use, specified as key/value pairs. To add, change, or delete environment variables, choose the folder icon, and then follow the on-screen instructions.
lambda.function.iamRole.tooltip=Choose an available Lambda execution role in the connected AWS account for Lambda to use for the function. To create an execution role in the account and have Lambda use that one instead, choose Create, and then follow the on-screen instructions.
lambda.function.enableXRay.tooltip=If selected, Lambda enables AWS X-Ray to detect, analyze, and optimize performance issues with the function.
lambda.function.sourceBucket.tooltip=Choose an available Amazon S3 bucket in the connected AWS account for the AWS Serverless Application Model Command Line Interface (AWS SAM CLI) to use to deploy the function to Lambda, or create a new one by choosing Create button.
lambda.create_new=Create new AWS Lambda...
lambda.function.created.notification=Function ''{0}'' created.
lambda.function.code_updated.notification=Code updated for function ''{0}''.
lambda.function.configuration_updated.notification=Configuration updated for function ''{0}''.
lambda.upload.deployment_settings=Deployment Settings
lambda.upload.configuration_settings=Configuration Settings
lambda.package.compilation_errors=Compilation completed with errors.\n{0}
lambda.package.compilation_aborted=Compilation was aborted.
lambda.package.unhandled_file_type=Unhandled file type : {0}
lambda.package.zip_fail=Failed to package zip.
lambda.function.label=Function:
lambda.service_name=AWS Lambda
lambda.upload.update_settings_button.title=Update
lambda.upload_validation.function_name=Function Name must be specified
lambda.upload_validation.function_name_invalid=Function names can only contain alphanumerics, hyphen (-) and underscore (_)
lambda.upload_validation.function_name_too_long=Function names must not exceed {0} characters in length
lambda.upload_validation.handler=Handler must be specified
lambda.upload_validation.iam_role.loading=Still loading IAM role...
lambda.upload_validation.iam_role=IAM role must be specified
lambda.upload_validation.runtime=Runtime must be specified
lambda.upload_validation.timeout=Timeout must be between {0} and {1} seconds
lambda.upload_validation.memory=Memory must be between {0} and {1} and an increment of {2}
lambda.upload_validation.source_bucket.loading=Still loading S3 bucket...
lambda.upload_validation.source_bucket=Bucket must be specified in order to deploy to Lambda
lambda.upload_validation.handler_not_found=Must be able to locate the handler in the project in order to deploy to Lambda
lambda.upload_validation.unsupported_runtime=Deploying using the runtime {0} is not supported
lambda.create.failed_to_upload=Unable to upload code to S3
settings.title=AWS Connection Settings
settings.credentials=Credentials
settings.credentials.recent=Recent Credentials
settings.credentials.none_selected=No credentials selected
settings.credentials.profile_sub_menu=All Credentials
settings.regions.recent=Recent Regions
settings.regions.region_sub_menu=All Regions
explorer.results_truncated=Results truncated, double click to load more
explorer.error_loading_resources=Error Loading Resources ({0})
explorer.error_loading_resources_default_details=check log for details
explorer.empty_node=empty
explorer.node.cloudformation=CloudFormation
explorer.node.lambda=Lambda
explorer.refresh.title=Refresh
explorer.refresh.description=Refresh explorer resources
explorer.stack.no.serverless.resources=Stack has no Lambda Functions
credentials.invalid.title=Invalid AWS Credential
credentials.invalid.more_info=More info...
credentials.profile.circular_profiles=A circular profile dependency was found between {0}
credentials.profile.source_profile_not_found=Profile ''{0}'' references source profile ''{1}'' which does not exist
credentials.profile.not_configured=No active credential provider configured
credentials.profile.not_found=Profile ''{0}'' not found
credentials.profile.not_valid=Profile ''{0}'' is not valid anymore
credentials.profile.missing_property=Profile ''{0}'' is missing required property {1}
credentials.profile.failed_load=Failed to load AWS profiles
credentials.profile.name=Profile:{0}
credentials.profile.mfa.title=MFA Challenge for {0}
credentials.profile.mfa.message=Enter MFA code for device: {0}
credentials.profile.unsupported=Profile ''{0}'' is not using role-based, session-based, or basic credentials.
credentials.profile.validation_error=Error while validating profile ''{0}''
credentials.profile.refresh_ok_title=AWS Credentials
credentials.profile.refresh_ok_message=Your AWS credentials have been reloaded from disk. Found {0} profiles.
credentials.profile.refresh_errors=Failed to load {0} profiles.
credentials.env_vars.name=Environment Variables
credentials.system_props.name=System Properties
iam.create.role.title=Create IAM Role
iam.create.role.name.label=Name:
iam.create.role.create=Create
iam.create.role.policy.editor.name=Permissions
iam.create.role.trust.editor.name=Trust Relationships
iam.create.role.missing.role.name=Role name is required.
iam.create.role.in_progress=Creating...
s3.create.bucket.title=Create S3 Bucket
s3.create.bucket.name.label=Bucket Name:
s3.create.bucket.create=Create
s3.create.bucket.missing.bucket.name=Bucket name is required.
s3.create.bucket.in_progress=Creating...
lambda.input.label=Input
lambda.credentials.label=Credentials:
lambda.run_configuration.description=Invoke AWS Lambda Function
lambda.run_configuration.no_handler_specified=Must specify a handler.
lambda.run_configuration.handler_not_found=Cannot find handler ''{0}'' in project.
lambda.run_configuration.no_runtime_specified=Must specify supported runtime.
lambda.run_configuration.input_file_error=Failed to load input file: {0}
lambda.run_configuration.input.file.label=File:
lambda.run_configuration.input.text.label=Text:
lambda.run_configuration.input.samples.label=Event Templates
lambda.run_configuration.input.samples.confirm=Selecting this template will replace the input text. Continue?
lambda.run_configuration.input.samples.confirm.title=Confirm Template Selection
lambda.run_configuration.region.label=Region:
lambda.run_configuration.no_region_specified=Must specify a region.
lambda.run_configuration.no_input_specified=Must specify an input.
lambda.run_configuration.credential_not_found_error=The credential provider with ID ''{0}'' could not be found.
lambda.run_configuration.credential_error=Error retrieving credentials: {0}.
lambda.run_configuration.no_credentials_specified=Must specify credential provider.
lambda.run_configuration.no_function_specified=Must specify function name or ARN.
lambda.run_configuration.unknown_region=Unknown region ''{0}''
lambda.run_configuration.sam.invalid_executable=Invalid SAM CLI executable configured: {0}
lambda.run_configuration.fromTemplate.tooltip=The location and file name of the AWS Serverless Application Model (AWS SAM) template (for example, template.yaml) to use for this configuration, as well as the resource in that template to associate with this configuration.
lambda.run_configuration.input.file.tooltip=The location and file name of the event data to pass into the function, expressed in JSON format.
lambda.run_configuration.input.text.tooltip=The event data to pass into the function, expression in JSON format.
lambda.credentials.tooltip=The name of the existing AWS account connection to use.
lambda.region.tooltip=The name of the AWS Region to use for the connected account.
lambda.sam.buildInContainer.tooltip=If selected, the AWS SAM CLI builds any of the serverless application's functions inside of an AWS Lambda-like Docker container locally before deployment. This is useful if the function depends on packages that have natively compiled dependencies or programs.
lambda.sam.skipCheckingNewerContainerImage.tooltip=If selected, the AWS SAM CLI skips pulling down the latest Docker image for the runtime that is specified on the Configuration tab.
lambda.sam.dockerNetwork.tooltip=The name or ID of an existing Docker network to Lambda Docker containers should connect to, along with the default bridge network. If not specified, the Lambda containers will only connect to the default bridge Docker network.
lambda.execute.invoke=Invoking Lambda function: {0}
lambda.execute.logs=Logs: \n{0}
lambda.execute.function_error=Function error: {0}
lambda.execute.service_error=Error invoking Lambda: {0}
lambda.execute.output=Output: \n{0}
configure.toolkit=Configure AWS connection
configure.toolkit.upsert_credentials.action=Edit AWS Credential file(s)
configure.toolkit.upsert_credentials.confirm_file_create=Credentials file {0} does not exist. Create it?
configure.toolkit.upsert_credentials.confirm_file_create.title=Create Credential File
configure.toolkit.upsert_credentials.confirm_file_create.okay=Create
aws.description=Amazon Web Services (AWS) is a secure cloud services platform, offering compute power, database storage, content delivery and other functionality to help businesses scale and grow.
aws.settings.global_level_label=Global AWS Toolkit settings
aws.settings.project_level_label=Project settings
aws.settings.sam.location=SAM CLI executable:
aws.settings.sam.help=Learn more
aws.settings.sam.show_all_gutter_icons=Show gutter icons for all potential AWS Lambda handlers
aws.settings.sam.show_all_gutter_icons_tooltip=When enabled, show gutter icons in source files for all potential Lambda handlers, even if they are not defined in a template or remotely.
aws.settings.title=AWS
aws.settings.sam.find.title=SAM CLI Configuration
aws.settings.sam.find.description=Select path to SAM CLI executable
aws.settings.telemetry.option=Send anonymized usage metrics to AWS
aws.settings.telemetry.description=Help us improve our product! Allow us to collect basic usage data.
aws.settings.telemetry.prompt.title=AWS Toolkit
aws.settings.telemetry.prompt.message=Anonymized usage metrics are collected by default. Click <a href="">here</a> to adjust this behavior.
aws.notification.title=AWS Toolkit
aws.notification.credentials_missing=Error: AWS credentials not configured
aws.notification.sam_cli_not_valid=Error: {0}. Click <a href="">here</a> to reconfigure AWS SAM.

lambda.run_configuration.source.from_template=From &template:
lambda.run_configuration.sam.no_such_function=Function {0} doesn''t exist in template {1}.
lambda.run_configuration.sam.no_template_specified=Template must be specified.
lambda.run_configuration.sam.no_function_specified=Function logical name must be specified.
lambda.run_configuration.sam=SAM CLI
lambda.run_configuration.sam.skip_image_pull=Skip checking for newer container images
lambda.run_configuration.sam.docker_network=Docker Network:
lambda.sam.template_not_found=Sam template {0} not found.
lambda.run_configuration.local=Local
lambda.run_configuration.remote=Remote
credentials.could_not_open=Could not open credential file {0} for editing
cloudformation.yaml.too_many_files=Found {0} YAML files but only expected 1
cloudformation.key_not_found={0} not found on {1}
cloudformation.missing_property=Property {} not found on {}
cloudformation.yaml.too_many_documents=There should only be 1 YAML document per file
cloudformation.yaml.invalid_root_type=Template does not start with a mapping
cloudformation.template_index.missing_type=Resource type must not be null for indexing
cloudformation.create_stack.failed=Failed to create stack {0}: {1}
cloudformation.create_stack.timeout=Failed to create stack {0} in {1} seconds. Please go to AWS Console for the latest status of the stack.
cloudformation.create_stack.failed_validation=Failed to create stack {0} due to validation error
cloudformation.update_stack.failed=Failed to update stack {0}: {1}
cloudformation.update_stack.failed_validation=Failed to update stack {0} due to validation error
cloudformation.update_stack.timeout=Failed to update stack {0} in {1} seconds. Please go to AWS Console for the latest status of the stack.
cloudformation.delete_stack.failed=Failed to delete stack {0}: {1}
cloudformation.delete_stack.timeout=Failed to delete stack {0} in {1} seconds. Please go to AWS Console for the latest status of the stack.
cloudformation.stack.time=Time
cloudformation.stack.status=Status
cloudformation.stack.type=Type
cloudformation.stack.logical_id=Logical ID
cloudformation.stack.physical_id=Physical ID
cloudformation.stack.loading=Loading...
lambda.sam.cli.install_url=https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html
aws.settings.sam.auto_detect=Auto-detected: {0}
lambda.function.updateConfiguration.action=Update Function Configuration
lambda.function.updateCode.action=Update Function Code
lambda.function.delete.action=Delete Function
serverless.application.deploy=Deploy Serverless Application
serverless.application.deploy.title=Deploy Serverless Application
serverless.application.deploy.action.name=Deploy
serverless.application.deploy.action.description=Deploy Serverless Application
serverless.application.deploy.validation.stack.missing=Specify a Stack to deploy to
serverless.application.deploy.validation.stack.loading=Still loading CloudFormation stacks...
serverless.application.deploy.validation.new.stack.name.missing=Enter the name of your new Stack
serverless.application.deploy.validation.new.stack.name.invalid=A stack name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character.
serverless.application.deploy.validation.new.stack.name.too.long=Stack names must not exceed {0} characters in length
serverless.application.deploy.validation.new.stack.name.duplicate=New stack name must be different than the existing stack name(s)
serverless.application.deploy.validation.s3.bucket.loading=Still loading S3 bucket...
serverless.application.deploy.validation.s3.bucket.empty=Select an S3 Bucket
serverless.application.deploy.validation.template.values.missing=Template values are missing: {0}
serverless.application.deploy.label.stack.select=Update Stack:
serverless.application.deploy.label.stack.new=Create Stack:
serverless.application.deploy.label.bucket=S3 Bucket:
serverless.application.deploy.template.parameters=Template Parameters
serverless.application.deploy.review_required=Require confirmation before deploying
serverless.application.deploy.button.bucket.create=Create
serverless.application.deploy.tooltip.createStack=The name of the stack for the AWS Serverless Application Model Command Line Interface (AWS SAM CLI) to create in AWS CloudFormation for the connected AWS account. The AWS SAM CLI then uses this stack to deploy the AWS serverless application.
serverless.application.deploy.tooltip.updateStack=Choose the name of an existing AWS CloudFormation stack for the AWS SAM CLI to use in the connected AWS account to deploy the AWS serverless application.
serverless.application.deploy.tooltip.template.parameters=Customizable deployment settings that are defined in the Sam Template file.
serverless.application.deploy.tooltip.s3Bucket=Choose an available Amazon S3 bucket in the connected AWS account for the AWS SAM CLI to use to deploy the AWS serverless application, or create a new one choosing Create button.
serverless.application.deploy.tooltip.deploymentConfirmation=If selected, instructs AWS CloudFormation to wait for you to finish creating or updating the corresponding stack by executing the stack's current change set in AWS CloudFormation.
serverless.application.deploy.execution_failed=SAM did not complete successfully
serverless.application.deploy.change_set_not_found=Failed to locate change set ARN
serverless.application.deploy.step_name.build=Build
serverless.application.deploy.step_name.package=Package
serverless.application.deploy.step_name.create_change_set=Create Change Set
serverless.application.deploy.execute_change_set=Continue Deployment
serverless.application.deploy_in_progress.title=Deploying Application {0}
serverless.application.deploy.abort=Process aborted
serverless.application.deploy.unknown_error=Unknown error
serverless.application.deploy.toast.template_file_failure=Could not detect template file
serverless.application.deploy.error.invalid_runtime=Invalid runtime {0} defined in template {1}
serverless.application.deploy.error.invalid_runtime_group=Cannot find runtime group for runtime {0} in template {1}
serverless.application.deploy.error.unsupported_runtime_group=The runtime {0} is not supported for deploying the SAM template {1}
serverless.application.deploy.error.empty_runtime=The runtime is not defined for all functions in template {0}
serverless.application.deploy.use_container=Build function inside a container
sam.cli_not_configured=SAM CLI executable not configured
sam.executable.unexpected_output=SAM CLI provided unexpected output. Please ensure that your SAM CLI is up-to-date: "{0}"
sam.executable.empty_info=SAM CLI did not provide any output
sam.executable.version_parse_error=Could not parse SAM executable version from "{0}"
sam.executable.version_wrong=<html>Bad SAM executable version. Expected {0} &le; version &lt; {1} but was {2}.</html>
sam.executable.version_too_low=Please upgrade your SAM CLI to resolve this issue.
sam.executable.version_too_high=Please upgrade your AWS Toolkit plugin to resolve this issue.
sam.init.name=AWS Serverless Application
sam.init.description=AWS Serverless Application Model (AWS SAM) prescribes rules for expressing Serverless applications on AWS.
sam.init.execution_error=Could not execute `sam init`!
sam.init.select_sam_template=SAM Template:
sam.init.python.bad_sdk=A valid Python SDK was not selected
sam.init.project_sdk.label=Project SDK:
sam.init.sam_template.tooltip=The name of the AWS Serverless Application Model (AWS SAM) template to use.
sam.init.template.hello_world.name=AWS SAM Hello World
sam.init.template.hello_world_maven.name=AWS SAM Hello World (Maven)
sam.init.template.hello_world_gradle.name=AWS SAM Hello World (Gradle)
sam.init.template.hello_world.description=A basic SAM app
sam.init.template.dynamodb_cookiecutter.name=AWS SAM DynamoDB Event Example
sam.init.template.dynamodb_cookiecutter.description=Sample SAM Template to interact with DynamoDB Events
sam.init.error.no.project.basepath=Unable to determine project basepath
sam.init.error.no.virtual.file=Unable to resolve location
sam.build.title=SAM build
sam.build.running=Running SAM build
sam.build.failed=SAM build command failed
sam.build.succeeded=SAM build command succeeded
cloudformation.stack.delete.action=Delete CloudFormation Stack
cloudformation.execute_change_set.success=Successfully executed change set against {0}
cloudformation.execute_change_set.success.title=Successfully executed change set
cloudformation.execute_change_set.failed=Failed to execute change set against {0}
cloudformation.toolwindow.label=CloudFormation
lambda.build.unable_to_locate_project_root=Unable to locate project diretory for Module ''%s''
lambda.build.java.unsupported_build_system=Module ''%s'' is not managed by Maven or Gradle
lambda.run_configuration.remote.function.tooltip=The AWS Lambda function to be invoked.