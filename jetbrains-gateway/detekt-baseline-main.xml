<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>BannedImports:CawsConnectionProvider.kt$import com.intellij.ui.layout.panel</ID>
    <ID>ExpressionBodySyntax:PtyCliBasedStep.kt$PtyCliBasedStep.&lt;no name provided>$return object : BaseOutputReader.Options() { override fun policy(): BaseDataReader.SleepingPolicy { return BaseDataReader.SleepingPolicy.BLOCKING } override fun splitToLines(): Boolean { return false } }</ID>
    <ID>ExpressionBodySyntax:PtyCliBasedStep.kt$PtyCliBasedStep.&lt;no name provided>.&lt;no name provided>$return BaseDataReader.SleepingPolicy.BLOCKING</ID>
    <ID>ExpressionBodySyntax:PtyCliBasedStep.kt$PtyCliBasedStep.&lt;no name provided>.&lt;no name provided>$return false</ID>
    <ID>ForbiddenVoid:CawsLoadingPanel.kt$CawsLoadingPanel$Void</ID>
    <ID>ImplicitDefaultLocale:Workspace.kt$Workspace$productCode.substringBefore("@sha").toUpperCase()</ID>
    <ID>SleepInsteadOfDelay:WorkspaceActions.kt$WorkspaceActions$sleep(timeout.next())</ID>
    <ID>UnusedParameter:WorkspaceDetails.kt$e: AnActionEvent</ID>
    <ID>UnusedPrivateProperty:SshCommandLine.kt$SshCommandLine.Companion$private const val ADDITIONAL_OPTIONS = "sshAdditionalOptions"</ID>
    <ID>UseCheckOrError:CawsConnectionProvider.kt$CawsConnectionParameters.Companion$throw IllegalStateException("Missing required parameter: CAWS environment id")</ID>
    <ID>UseCheckOrError:CawsConnectionProvider.kt$CawsConnectionParameters.Companion$throw IllegalStateException("Missing required parameter: CAWS project name")</ID>
    <ID>UseCheckOrError:CawsConnectionProvider.kt$CawsConnectionProvider$throw IllegalStateException("Environment is deleted, unable to start")</ID>
    <ID>UseCheckOrError:CawsConnectionProvider.kt$CawsConnectionProvider$throw IllegalStateException("Unknown state $status")</ID>
    <ID>UseCheckOrError:GatewayEcrVersions.kt$GatewayProduct.Companion$throw IllegalStateException("Could not parse runtime for build: ${ide.runtime()}")</ID>
    <ID>UseCheckOrError:IdeBackendActions.kt$IdeBackendActions.Companion$throw IllegalStateException("IDE runtime was not provided")</ID>
    <ID>UseCheckOrError:IdeBackendActions.kt$IdeBackendActions.Companion$throw IllegalStateException("Project was not provided")</ID>
    <ID>UseCheckOrError:StartBackend.kt$StartBackend$throw IllegalStateException("Backend did not start within $duration")</ID>
    <ID>UseCheckOrError:WorkspaceActions.kt$WorkspaceActions$throw IllegalStateException("Environment did not start: ${response.status()}")</ID>
    <ID>UseCheckOrError:WorkspaceActions.kt$WorkspaceActions$throw IllegalStateException("Environment did not stop: ${response.status()}")</ID>
    <ID>UseOrEmpty:WorkspaceConfigurationDialog.kt$ReconfigureWorkspaceSettings$ws.alias ?: ""</ID>
    <ID>UseOrEmpty:WorkspaceDetails.kt$ShellAction.Companion$nullize(nullizeSpaces = true)?.split(',')?.map { it.toInt() } ?: emptyList()</ID>
    <ID>UseOrEmpty:WorkspaceDetails.kt$WorkspaceDetails$ws.alias?.let { listOf(it) } ?: emptyList()</ID>
    <ID>UseOrEmpty:WorkspaceGroupsPanel.kt$WorkspaceGroupsPanel$this.workspaces.codeRepos()[project] ?: emptyList()</ID>
  </CurrentIssues>
</SmellBaseline>
